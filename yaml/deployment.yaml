---
# Source: sdb-controller/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-sdb-controller
  labels:
    helm.sh/chart: sdb-controller-0.1.0
    app.kubernetes.io/name: sdb-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.1.0
    app.kubernetes.io/managed-by: Helm
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: sdb-controller
      app.kubernetes.io/instance: release-name
  policyTypes:
    - Ingress
    - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
      ports:
        - port: 443
          protocol: TCP
        - port: 6443
          protocol: TCP
    - to: []
  ingress:
    - ports:
        - port: http
          protocol: TCP
---
# Source: sdb-controller/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-sdb-controller
  labels:
    helm.sh/chart: sdb-controller-0.1.0
    app.kubernetes.io/name: sdb-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.1.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: sdb-controller/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-sdb-controller
  labels:
    helm.sh/chart: sdb-controller-0.1.0
    app.kubernetes.io/name: sdb-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.1.0
    app.kubernetes.io/managed-by: Helm
rules:
  # Core: read config/secret, emit events
  - apiGroups: [""]
    resources: ["configmaps", "secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["events.k8s.io"]
    resources: ["events"]
    verbs: ["create", "patch"]

  # Manage a Deployment owned by the controller
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

  # SurrealDB CRDs managed by this controller
  - apiGroups: ["surrealdb.aexol.com"]
    resources: ["clusters", "databases", "users"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["surrealdb.aexol.com"]
    resources: ["clusters/status", "databases/status", "users/status"]
    verbs: ["get", "update", "patch"]
  - apiGroups: ["surrealdb.aexol.com"]
    resources: [
      "clusters/finalizers",
      "databases/finalizers",
      "users/finalizers",
    ]
    verbs: ["update"]

  # TiDB operator CRDs (optional)
---
# Source: sdb-controller/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-sdb-controller
  labels:
    helm.sh/chart: sdb-controller-0.1.0
    app.kubernetes.io/name: sdb-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.1.0
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-sdb-controller
subjects:
  - kind: ServiceAccount
    name: release-name-sdb-controller
    namespace: sportxpert-dev
---
# Source: sdb-controller/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-sdb-controller
  labels:
    helm.sh/chart: sdb-controller-0.1.0
    app.kubernetes.io/name: sdb-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.1.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: sdb-controller
    app.kubernetes.io/instance: release-name
  ports:
    - name: http
      port: 9090
      targetPort: metrics
---
# Source: sdb-controller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-sdb-controller
  labels:
    helm.sh/chart: sdb-controller-0.1.0
    app.kubernetes.io/name: sdb-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.1.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sdb-controller
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: sdb-controller-0.1.0
        app.kubernetes.io/name: sdb-controller
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: 0.1.0
        app.kubernetes.io/managed-by: Helm
      annotations:
        {}
    spec:
      serviceAccountName: release-name-sdb-controller
      securityContext:
        {}
      containers:
        - name: controller
          image: "ghcr.io/aexol-studio/sdb-controller:latest"
          imagePullPolicy: IfNotPresent
          args:
            []
          env:
            - name: RUST_LOG
              value: "info"
          envFrom:
          ports:
            - name: metrics
              containerPort: 9090
          resources:
            {}
          volumeMounts:
            []
      volumes:
        []
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
